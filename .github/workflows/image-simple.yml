name: image-simple
on:
  push:
    tags:
      - "202*" # any tag. GH releases (containing binaries for download) require tags

jobs:

  prepare:
    runs-on: ubuntu-latest
    if: ${{ github.repository_owner == 'rpardini' }}
    outputs:
      tagName: ${{ steps.tagName.outputs.tag }}
    steps:
      - uses: olegtarasov/get-tag@14deb5cb39a98e81adb64f8ac8b27aefab278784 # get the tag name from the ref. v2.1.2 https://github.com/olegtarasov/get-tag/releases/tag/v2.1.2
        id: tagName
      # This creates an empty release on the tag with just the header.
      - name: Release ${{ matrix.board }}
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # de2c0eb8 = v0.1.5; already with koplo199's node16 fixes
        if: startsWith(github.ref, 'refs/tags/') # only for tags. GitHub requires tags for releases.
        with:
          append_body: true # append, since we've descriptions in there already
          body: |
            ### Release ${{ steps.tagName.outputs.tag }} images below, in no particular order

  "Images": # short name because GH will expand with the matrix values
    needs: [ prepare ]
    timeout-minutes: 60
    if: ${{ github.repository_owner == 'rpardini' }}
    strategy:
      fail-fast: false # let other jobs try to complete if one fails
      matrix:
        # board: the BOARD= to build
        # desc: markdown for description in release notes
        # variant: env vars to pass both to scripts and ./compile.sh
        # aa: GH Actions orders the jobs by the first key value. 'aa' should be first. it never is. it is actually quite pointless trying. it's effectively random.

        include:
          # 0000 = stuff I need first for emergency reasons, avoid.
          # 0100 = meson64 stuff (fixed version), boards I own first, then others
          # 0200 = uefi stuff (fixed version)
          # 0500+ other stuff
          # 0100 = meson64 stuff (fixed version), boards I own first, then others
          - aa: 0011
            board: rock-5b
            desc: rock-5b, midstream (6.y + downstream), cli
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=midstream"

          - aa: 0012
            board: odroidxu4
            desc: ODROID XU4, current, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=current"

          - aa: 0020
            board: bananapicm4io
            desc: BananaPi CM4 CM4IO, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0021
            board: aml-s9xx-box
            desc: aml-s9xx-box, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0111
            board: bananapim5
            desc: BananaPi M5, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0112
            board: bananapim2s
            desc: BananaPi M2S, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0113
            board: bananapim2pro
            desc: BananaPi M2Pro, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0115
            board: odroidn2
            desc: ODROID N2+, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0120
            board: odroidhc4
            desc: ODROID HC4, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0130
            board: khadas-vim3l
            desc: khadas-vim3l, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0135
            board: lafrite
            desc: lafrite, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0140
            board: lepotato
            desc: lepotato, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0150
            board: radxa-zero
            desc: radxa-zero, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0155
            board: radxa-zero2
            desc: radxa-zero2, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0160
            board: odroidc2
            desc: odroidc2, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0165
            board: khadas-vim2
            desc: khadas-vim2, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0175
            board: khadas-vim3
            desc: Khadas VIM3 (not L), edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0180
            board: odroidc4
            desc: ODROID C4, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0185
            board: t95z
            desc: t95z, edge, regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          # other stuff
          - aa: 0202
            board: uefi-arm64
            desc: UEFI Generic arm64, with Armbian mainline kernel (edge), regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge "

          # e2img for oracle cloud
          - aa: 0205
            board: uefi-arm64
            desc: UEFI Generic ARM64 Rescue e2img, edge, cloud image, user-data at /boot, *always Jammy*
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=yes ENABLE_EXTENSIONS=uefi-rescue BRANCH=edge RELEASE=jammy"

          #- aa: 0215 #  was moved up so it builds early at 0001

          # e2img fo4r x86 baremetal/cloud
          - aa: 0235
            board: uefi-x86
            desc: UEFI Generic x86 Rescue e2img, edge, cloud image, user-data at /boot, *always Jammy*
            runner_tags: ubuntu-latest # gh runner
            variant: "CLOUD_IMAGE=yes ENABLE_EXTENSIONS=uefi-rescue BRANCH=edge RELEASE=jammy"

          - aa: 0235
            board: uefi-x86
            desc: UEFI Generic x86 Rescue e2img, ddk, cloud image, user-data at /boot, *always Jammy*
            runner_tags: ubuntu-latest # gh runner
            variant: "CLOUD_IMAGE=yes ENABLE_EXTENSIONS=uefi-rescue BRANCH=ddk RELEASE=jammy"


          - aa: 0220
            board: uefi-arm64
            desc: UTM 3.x arm64 UEFI Virtual Machine, with Armbian mainline kernel (edge), regular CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no ENABLE_EXTENSIONS=image-output-utm BRANCH=edge"

          # UEFI x86
          - aa: 0220
            board: uefi-x86
            desc: UEFI Generic x86 cloud image, with Armbian mainline kernel (edge), for metadata-capable clouds (AWS/GCP/OCI/OpenStack/KVM/etc), includes external kernel and initrd for kexec
            runner_tags: ubuntu-latest # gh runner
            variant: "CLOUD_IMAGE=yes BRANCH=edge ENABLE_EXTENSIONS=cloud-metadata"

          - aa: 0225
            board: uefi-x86
            desc: UEFI Generic x86 cloud image, with -generic Ubuntu kernel (ddk), for metadata-capable clouds (AWS/GCP/OCI/OpenStack/KVM/etc), includes external kernel and initrd for kexec
            runner_tags: ubuntu-latest # gh runner
            variant: "CLOUD_IMAGE=yes BRANCH=ddk ENABLE_EXTENSIONS=cloud-metadata"

          - aa: 0230
            board: uefi-arm64
            desc: UEFI Generic ARM64, with -generic Ubuntu kernel (ddk), cloud image for metadata-capable clouds (AWS/GCP/OCI/OpenStack/KVM/etc), includes external kernel and initrd for kexec
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=yes BRANCH=ddk ENABLE_EXTENSIONS=cloud-metadata"

          - aa: 0320
            board: uefi-x86
            desc: VMWare x86 UEFI Virtual Machine, with Armbian mainline kernel (edge), regular CLI
            runner_tags: ubuntu-latest # gh runner
            variant: "CLOUD_IMAGE=no ENABLE_EXTENSIONS=vmware-vm OVF_KEEP_IMG=yes BRANCH=edge"

          - aa: 0322
            board: uefi-x86
            desc: VMWare x86 UEFI Virtual Machine, with Armbian mainline kernel (edge), desktop Gnome
            runner_tags: ubuntu-latest # gh runner
            variant: "CLOUD_IMAGE=no ENABLE_EXTENSIONS=vmware-vm BRANCH=edge BUILD_DESKTOP=yes DESKTOP_APPGROUPS_SELECTED=x DESKTOP_ENVIRONMENT=gnome DESKTOP_ENVIRONMENT_CONFIG_NAME=config_base"

          - aa: 0324
            board: uefi-x86
            desc: UTM 3.x x86 UEFI Virtual Machine, with Armbian mainline kernel (edge), regular CLI
            runner_tags: ubuntu-latest # gh runner
            variant: "CLOUD_IMAGE=no ENABLE_EXTENSIONS=image-output-utm BRANCH=edge"

          - aa: 0326
            board: qemu-uboot-x86
            desc: qemu-uboot-x86 (edge), regular CLI; for development only
            runner_tags: ubuntu-latest # gh runner
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          # RISCV64
          - aa: 0340
            board: uefi-riscv64
            desc: UEFI Generic RISC-V 64 (edge)
            runner_tags: ubuntu-latest # gh runner, to use hosted: runner_tags: [ self-hosted, Linux, 'armbian', 'image-riscv64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          #- aa: 0342
          #  board: visionfive
          #  desc: VisionFive RISC-V 64 (edge)
          #  runner_tags: ubuntu-latest # gh runner, to use hosted: runner_tags: [ self-hosted, Linux, 'armbian', 'image-riscv64' ]
          #  variant: "CLOUD_IMAGE=no BRANCH=edge"
          #
          #- aa: 0344
          #  board: beaglev
          #  desc: BeagleV RISC-V 64 (edge)
          #  runner_tags: ubuntu-latest # gh runner, to use hosted: runner_tags: [ self-hosted, Linux, 'armbian', 'image-riscv64' ]
          #  variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0710
            board: odroidm1
            desc: odroidm1, edge, regular CLI #, built on x86
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0720
            board: rock-5b
            desc: rock-5b, legacy (5.10), cli
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=legacy"

          - aa: 0722
            board: rock-5b
            desc: rock-5b, edge (6.2+), cli; very experimental
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0725
            board: orangepi5
            desc: orangepi5, legacy (5.10), cli
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=legacy"


          # RPI4b, edge
          - aa: 0805
            board: rpi4b
            desc: Raspberry Pi 4B, with Armbian + RPiFoundation kernel (edge), cli
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0805
            board: rpi4b
            desc: Raspberry Pi 4B, with Armbian + RPiFoundation kernel (current), cli
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=current"

          - aa: 0905
            board: tinkerboard
            desc: Tinkerboard, edge, cli
            runner_tags: ubuntu-latest # gh runner, to use hosted: runner_tags: [ self-hosted, Linux, 'armbian', 'image-armhf' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0910
            board: tinkerboard-2
            desc: Tinkerboard-2, edge, cli
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0912
            board: oneplus5
            desc: OnePlus 5, fastboot-compatible, edge, CLI
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0915
            board: rockpro64
            desc: RockPro64, cli, edge
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0925
            board: quartz64a
            desc: quartz64a, cli, edge # media kernel
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0930
            board: nanopct4
            desc: nanopct4, Desktop gnome, edge # uses media kernel
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge BUILD_DESKTOP=yes DESKTOP_APPGROUPS_SELECTED=browsers DESKTOP_ENVIRONMENT=gnome DESKTOP_ENVIRONMENT_CONFIG_NAME=config_base"

          # Sunxi, Sunxi64 and jetson-nano
          - aa: 0951
            board: jetson-nano
            desc: jetson-nano, cli, edge # media kernel
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0955
            board: tritium-h3
            desc: tritium-h3, current, cli
            runner_tags: ubuntu-latest # gh runner, to use hosted: runner_tags: [ self-hosted, Linux, 'armbian', 'image-armhf' ]
            variant: "CLOUD_IMAGE=no BRANCH=current"

          - aa: 0960
            board: tritium-h3
            desc: tritium-h3, edge, cli
            runner_tags: ubuntu-latest # gh runner, to use hosted: runner_tags: [ self-hosted, Linux, 'armbian', 'image-armhf' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          - aa: 0965
            board: tritium-h5
            desc: tritium-h5, current, cli
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=current"

          - aa: 0970
            board: tritium-h5
            desc: tritium-h5, edge, cli
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=edge"

          ## mvebu
          #- aa: 0975
          #  board: clearfogpro
          #  desc: clearfogpro, edge, cli
          #  runner_tags: ubuntu-latest # gh runner, to use hosted: runner_tags: [ self-hosted, Linux, 'armbian', 'image-armhf' ]
          #  variant: "CLOUD_IMAGE=no BRANCH=edge"

          # vendor kernel for Phytium
          - aa: 0980
            board: phytium-d2000
            desc: phytium-d2000, legacy, Feiteng vendor kernel 4.19.y
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=legacy"


          # ddks last
          - aa: 0995
            board: uefi-arm64
            desc: UEFI Generic ARM64 Rescue e2img, ddk, cloud image, user-data at /boot, *always Jammy*
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=yes ENABLE_EXTENSIONS=uefi-rescue BRANCH=ddk RELEASE=jammy"

          # RPI4b, ddk
          - aa: 0996
            board: rpi4b
            desc: Raspberry Pi 4B, ddk, cli
            runner_tags: [ self-hosted, Linux, 'armbian', 'image-arm64' ]
            variant: "CLOUD_IMAGE=no BRANCH=ddk"

    runs-on: "${{ matrix.runner_tags }}"
    name: "${{ matrix.aa }} ${{ matrix.desc }}"
    env:
      BOARD: "${{ matrix.board }}"
      VARIANT: "${{ matrix.variant }}"
      EXTRA: "'DONT_BUILD_ARTIFACTS=kernel,firmware,full_firmware,rootfs' COMPRESS_OUTPUTIMAGE=xz "

      OCI_TARGET_BASE: "ghcr.io/${{ github.repository }}/" # This is picked up by the Docker launcher automatically
      DOCKER_ARMBIAN_BASE_COORDINATE_PREFIX: "ghcr.io/${{ github.repository }}:armbian-next-" # Use Docker image in same repo
      DOCKER_SKIP_UPDATE: "yes" # Do not apt update/install/requirements/etc during Dockerfile build, trust DOCKER_ARMBIAN_BASE_COORDINATE_PREFIX's images are up-to-date

    steps:

      - name: Checkout build repo
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/armbian-build
          ref: extensions
          clean: false # true is default. it *will* delete the hosts /dev if mounted inside.

      - name: Build board ${{ matrix.board }}
        id: buildBoard
        run: |
          rm -f userpatches/VERSION # Remove, used to exist before
          bash ./compile.sh rpardini-generic "IMAGE_VERSION=${{needs.prepare.outputs.tagName}}-${{ github.repository_owner }}"  "BOARD=${{env.BOARD}}" ${{env.VARIANT}} ${{env.EXTRA}}

      - name: Release ${{ matrix.board }}
        id: release1
        continue-on-error: true
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # de2c0eb8 = v0.1.5; already with koplo199's node16 fixes
        if: startsWith(github.ref, 'refs/tags/') # only for tags. GitHub requires tags for releases.
        with:
          files: |
            output/images/*.xz

      - name: Release ${{ matrix.board }} (retry if 1st failed)
        id: release2
        if: steps.release1.outcome == 'failure'
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # de2c0eb8 = v0.1.5; already with koplo199's node16 fixes
        with:
          files: |
            output/images/*.xz

      - name: Cleanup output images
        if: always()
        run: |
          rm -rf output/images userpatches/VERSION
