name: kernel-simple

on:
  #schedule:
  #  - cron: '0 1 * * *' # Scheduled runs every day at 1am UTC
  workflow_dispatch:
  workflow_call:


jobs:

  "Kernel":
    if: ${{ github.repository_owner == 'rpardini' }}
    strategy:
      fail-fast: false # let other jobs try to complete if one fails
      matrix:
        include:
          - aa: 0050
            board: "orangepizero2"
            branch: "legacy"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0100
            board: "odroidhc4"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0105
            board: "odroidhc4"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0110
            board: "uefi-arm64"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0115
            board: "uefi-arm64"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0120
            board: "uefi-x86"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0125
            board: "uefi-x86"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0130
            board: "rock-5b"
            branch: "legacy"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0135
            board: "rock-5b"
            branch: "midstream"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0140
            board: "odroidm1"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0145
            board: "rock-5b"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0150
            board: "rpi4b"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0155
            board: "rpi4b"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0160
            board: "tinkerboard-2"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0165
            board: "tinkerboard-2"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0170
            board: "oneplus5"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0175
            board: "quartz64a"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          #- board: "quartz64a"
          #  branch: "current"
          #  runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
          #  variant: ""

          #- board: "tritium-h3"
          #  branch: "edge"
          #  runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
          #  variant: ""

          - aa: 0180
            board: "tritium-h3"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          #- board: "tritium-h5"
          #  branch: "edge"
          #  runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
          #  variant: ""

          - aa: 0185
            board: "tritium-h5"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          #- board: "clearfogpro" # broken waiting for fixes
          #  branch: "edge"
          #  runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
          #  variant: ""

          - aa: 0190
            board: "clearfogpro"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0195
            board: "odroidxu4"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0200
            board: "odroidxu4"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0205
            board: "phytium-d2000"
            branch: "legacy"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0210
            board: "tinkerboard"
            branch: "edge"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          - aa: 0215
            board: "tinkerboard"
            branch: "current"
            runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
            variant: ""

          #- board: "uefi-riscv64"
          #  branch: "edge"
          #  runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
          #  variant: ""

          #- board: "visionfive" # starfive
          #  branch: "edge"
          #  runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
          #  variant: ""

          #- board: "visionfive2" # starfive2
          #  branch: "edge"
          #  runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
          #  variant: ""

          #- board: "nezha" # d1
          #  branch: "edge"
          #  runner_tags: [ "self-hosted", "Linux", 'armbian', "artifact-kernel" ]
          #  variant: ""

    runs-on: "${{ matrix.runner_tags }}"
    name: "${{ matrix.aa}}=${{ matrix.board }} ${{ matrix.branch }} (${{ matrix.variant }})"
    env:
      BOARD: "${{ matrix.board }}"
      BRANCH: "${{ matrix.branch }}"
      VARIANT: "${{ matrix.variant }}"
      
      OCI_TARGET_BASE: "ghcr.io/${{ github.repository }}/" # This is picked up by the Docker launcher automatically
      DOCKER_ARMBIAN_BASE_COORDINATE_PREFIX: "ghcr.io/${{ github.repository }}:armbian-next-" # Use Docker image in same repo
      DOCKER_SKIP_UPDATE: "yes" # Do not apt update/install/requirements/etc during Dockerfile build, trust DOCKER_ARMBIAN_BASE_COORDINATE_PREFIX's images are up-to-date

    steps:

      # Login to ghcr.io, for later uploading rootfs to ghcr.io
      - name: Docker Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }} # GitHub username or org
          password: ${{ secrets.GITHUB_TOKEN }}    # GitHub actions builtin token. repo has to have pkg access.

      - name: Checkout build repo
        uses: actions/checkout@v3 # We don't need to clone git, really. A wget would suffice for GH-hosted runners. But using clone is better for Igor-hosted runners.
        with:
          repository: ${{ github.repository_owner }}/armbian-build
          ref: extensions
          fetch-depth: 1
          clean: false # true is default. it *will* delete the hosts /dev if mounted inside.

      - name: Build Kernel ${{env.BOARD}}:${{env.BRANCH}} (variant ${{env.VARIANT}})
        id: kernel
        run: |
          # BRANCH and BOARD are in the env, but Docker doesn't know that; (sudo has --preserve-env). So we need to pass them as args.
          # let VARIANT expand
          # SHARE_LOG=yes to share logs to pastebin
          bash ./compile.sh kernel \
            "BRANCH=${{env.BRANCH}}" "BOARD=${{env.BOARD}}" ${{env.VARIANT}} \
            SHARE_LOG=yes rpardini-generic
